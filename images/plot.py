import matplotlib.pyplot as plt
points = []

# vanilla AI, n=111
#scores = {0: (290, 535), 1: (461, 374), 2: (271, 388), 3: (253, 462), 4: (305, 302), 5: (243, 439), 6: (264, 420), 7: (247, 382), 8: (315, 488), 9: (322, 477), 10: (364, 309), 11: (293, 324), 12: (284, 309), 13: (301, 338), 14: (259, 335), 15: (308, 393), 16: (230, 278), 17: (280, 319), 18: (257, 362), 19: (325, 439), 20: (265, 485), 21: (246, 414), 22: (349, 363), 23: (220, 588), 24: (314, 317), 25: (206, 383), 26: (235, 356), 27: (269, 420), 28: (244, 350), 29: (250, 398), 30: (316, 408), 31: (310, 315), 32: (300, 425), 33: (368, 328), 34: (387, 479), 35: (322, 456), 36: (342, 502), 37: (348, 575), 38: (361, 391), 39: (283, 422), 40: (316, 433), 41: (205, 354), 42: (315, 513), 43: (308, 406), 44: (261, 439), 45: (261, 484), 46: (247, 454), 47: (284, 281), 48: (220, 561), 49: (258, 436), 50: (338, 538), 51: (270, 405), 52: (330, 243), 53: (278, 352), 54: (226, 447), 55: (277, 319), 56: (280, 331), 57: (355, 481), 58: (325, 272), 59: (254, 402), 60: (345, 470), 61: (265, 462), 62: (283, 298), 63: (294, 418), 64: (230, 375), 65: (278, 479), 66: (305, 476), 67: (280, 353), 68: (234, 291), 69: (296, 272), 70: (236, 457), 71: (273, 406), 72: (268, 583), 73: (235, 426), 74: (237, 366), 75: (324, 365), 76: (214, 251), 77: (390, 506), 78: (231, 484), 79: (206, 464), 80: (329, 547), 81: (176, 533), 82: (323, 349), 83: (302, 471), 84: (231, 394), 85: (233, 508), 86: (287, 425), 87: (234, 490), 88: (277, 389), 89: (266, 406), 90: (351, 349), 91: (319, 538), 92: (266, 590), 93: (327, 304), 94: (240, 248), 95: (252, 279), 96: (384, 378), 97: (304, 432), 98: (279, 445), 99: (249, 267)}

#rack heuristic only
#scores =  {0: (210, 575), 1: (297, 416), 2: (341, 397), 3: (281, 412), 4: (332, 556), 5: (233, 377), 6: (307, 383), 7: (185, 450), 8: (321, 515), 9: (231, 320), 10: (319, 379), 11: (321, 481), 12: (264, 400), 13: (242, 410), 14: (332, 397), 15: (269, 322), 16: (274, 451), 17: (342, 398), 18: (332, 415), 19: (243, 416), 20: (202, 568), 21: (250, 520), 22: (337, 366), 23: (329, 336), 24: (300, 495), 25: (254, 439), 26: (249, 486), 27: (233, 367), 28: (274, 376), 29: (350, 428), 30: (363, 478), 31: (297, 380), 32: (258, 289), 33: (483, 349), 34: (235, 319), 35: (341, 160), 36: (301, 343), 37: (384, 472), 38: (239, 364), 39: (240, 516), 40: (298, 231), 41: (256, 337), 42: (223, 287), 43: (309, 437), 44: (255, 368), 45: (326, 452), 46: (270, 414), 47: (288, 329), 48: (307, 456), 49: (265, 433), 50: (334, 277), 51: (253, 485), 52: (230, 372), 53: (337, 597), 54: (254, 323), 55: (243, 328), 56: (317, 295), 57: (290, 420), 58: (310, 347), 59: (326, 336), 60: (239, 371), 61: (298, 330), 62: (320, 416), 63: (320, 565), 64: (321, 545), 65: (241, 454), 66: (368, 457), 67: (389, 361), 68: (331, 349), 69: (333, 468), 70: (261, 206), 71: (272, 460), 72: (218, 476), 73: (251, 510), 74: (315, 440), 75: (219, 365), 76: (387, 382), 77: (254, 422), 78: (233, 352), 79: (266, 556), 80: (330, 698), 81: (290, 489), 82: (312, 401), 83: (296, 346), 84: (306, 441), 85: (286, 246), 86: (272, 255), 87: (268, 514), 88: (319, 525), 89: (284, 260), 90: (308, 477), 91: (304, 534), 92: (255, 252), 93: (231, 444), 94: (214, 611), 95: (248, 333), 96: (250, 505), 97: (309, 423), 98: (265, 493), 99: (338, 223)}

# MC only vs quackle
#scores =  {0: (175, 488), 1: (161, 579), 2: (207, 348), 3: (193, 492), 4: (250, 302), 5: (143, 510), 6: (168, 506), 7: (170, 554), 8: (268, 524), 9: (197, 418), 10: (203, 315), 11: (205, 493), 12: (287, 400), 13: (166, 474), 14: (139, 620)}

# MC only vs self
scores = {0: (198, 362), 1: (206, 501), 2: (179, 439), 3: (292, 430), 4: (233, 504), 5: (242, 366), 6: (222, 424), 7: (199, 392), 8: (213, 366), 9: (135, 136), 10: (260, 427), 11: (244, 403)}
for p in scores.itervalues(): points.append(p)

print "points",points
deltas = []
ratios = []
cs221 = 0
quackle = 0
numGames = len(points)
for p in points:
    quackle += p[1]
    cs221 += p[0]
    ratios.append(p[1]/float(p[0]))
    deltas.append(p[1] - p[0])
deltas = sorted(deltas)
ratios = sorted(ratios)
winRate = 0
smashedRate = 0
smashingRate = 0
for g in ratios:
    if g < 0.5:
        smashingRate += 1
    if g < 1:
        winRate += 1
    if g >= 2:
        smashedRate +=1
winRate = winRate/float(numGames)
smashedRate = smashedRate/float(numGames)
smashingRate = smashingRate/float(numGames)
print "deltas",deltas
print "num games", numGames
print "quackle avg",quackle/float(numGames)
print "cs221 avg",cs221/float(numGames)
print "avg delta",sum(deltas)/float(numGames)
print "win rate",winRate
print "smashed rate",smashedRate
print "smashing rate",smashingRate
print "best ratio", 1.0/ratios[0]
print "ratios",ratios
plt.bar(range(numGames), deltas, color="yellow")
#plt.plot([i for i in xrange(len(us))], us, label="cs221", marker = '.')
#plt.plot([i for i in xrange(len(quackle))], quackle, label="quackle", marker = '.')
plt.title('Quackle vs cs221 Score Differentials')
plt.xlabel("game number")
#plt.ylim([0, 600])
plt.ylabel("Quackle minus cs221 Score ")
plt.legend()
plt.show()
